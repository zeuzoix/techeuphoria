<?xml version="1.0" encoding="utf-8" ?>
<feed xml:lang="en-US" xmlns="http://www.w3.org/2005/Atom">
<id>http://zeuzoix.github.io/techeuphoria/</id>
<title>A Technical Odyssey</title>
<author>
<name>Conrad Gomes</name>
</author>
<updated>2014-06-26T04:22:59-04:00</updated>
<link href="http://zeuzoix.github.io/techeuphoria/feed.xml" rel="self" type="application/atom+xml" />
<link href="http://zeuzoix.github.io/techeuphoria/" rel="alternate" type="text/html" />
<entry>
<id>http://zeuzoix.github.io/techeuphoria/posts/2014/01/29/printing-linux-kernel-version.html</id>
<title>Printing the Linux kernel version</title>
<updated>2014-06-26T04:22:59-04:00</updated>
<published>2014-01-29T00:00:00+00:00</published>
<link href="http://zeuzoix.github.io/techeuphoria/posts/2014/01/29/printing-linux-kernel-version.html" rel="alternate" type="text/html" />
<author>
<name>Conrad Gomes</name>
</author>
<category term="linux"></category>
<category term="kernel"></category>
<category term="programming"></category>
<category term="c"></category>
<summary>

The kernel version that a kernel module is built with can differ from the kernel version it is running on. The version of the kernel that the module is running on is shown
in the first log and the version of the kernel is compiled with is shown
in the second log in the version_init function:



#include &lt;linux/init.h&gt;
#include &lt;linux/module.h&gt;
#include &lt;linux/kernel.h&gt;
#include &lt;linux/utsname.h&gt;
#include &lt;generated/utsrelease.h&gt;

static int __init version_init(void)
{
        int i = 0;

        pr_alert(&quot;Kernel module running of version %s\n&quot;, utsname()-&gt;release);
        pr_alert(&quot;Kernel module compiled with version %s\n&quot;,...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The kernel version that a kernel module is built with can differ from the kernel version it is running on. The version of the kernel that the module is running on is shown
in the first log and the version of the kernel is compiled with is shown
in the second log in the version_init function:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;CodeRay&quot;&gt;&lt;code class=&quot;c language-c&quot;&gt;&lt;span style=&quot;color:#579&quot;&gt;#include&lt;/span&gt; &lt;span style=&quot;color:#B44;font-weight:bold&quot;&gt;&amp;lt;linux/init.h&amp;gt;&lt;/span&gt;
&lt;span style=&quot;color:#579&quot;&gt;#include&lt;/span&gt; &lt;span style=&quot;color:#B44;font-weight:bold&quot;&gt;&amp;lt;linux/module.h&amp;gt;&lt;/span&gt;
&lt;span style=&quot;color:#579&quot;&gt;#include&lt;/span&gt; &lt;span style=&quot;color:#B44;font-weight:bold&quot;&gt;&amp;lt;linux/kernel.h&amp;gt;&lt;/span&gt;
&lt;span style=&quot;color:#579&quot;&gt;#include&lt;/span&gt; &lt;span style=&quot;color:#B44;font-weight:bold&quot;&gt;&amp;lt;linux/utsname.h&amp;gt;&lt;/span&gt;
&lt;span style=&quot;color:#579&quot;&gt;#include&lt;/span&gt; &lt;span style=&quot;color:#B44;font-weight:bold&quot;&gt;&amp;lt;generated/utsrelease.h&amp;gt;&lt;/span&gt;

&lt;span style=&quot;color:#088;font-weight:bold&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;int&lt;/span&gt; __init version_init(&lt;span style=&quot;color:#088;font-weight:bold&quot;&gt;void&lt;/span&gt;)
{
        &lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;int&lt;/span&gt; i = &lt;span style=&quot;color:#00D&quot;&gt;0&lt;/span&gt;;

        pr_alert(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Kernel module running of version %s&lt;/span&gt;&lt;span style=&quot;color:#b0b&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, utsname()-&amp;gt;release);
        pr_alert(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Kernel module compiled with version %s&lt;/span&gt;&lt;span style=&quot;color:#b0b&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, UTS_RELEASE);
        &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#00D&quot;&gt;0&lt;/span&gt;;
}

&lt;span style=&quot;color:#088;font-weight:bold&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color:#088;font-weight:bold&quot;&gt;void&lt;/span&gt; __exit version_exit(&lt;span style=&quot;color:#088;font-weight:bold&quot;&gt;void&lt;/span&gt;)
{
        pr_alert(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Over and out!&lt;/span&gt;&lt;span style=&quot;color:#b0b&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
}

module_init(version_init);
module_exit(version_exit);

MODULE_LICENSE(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;GPL&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
MODULE_AUTHOR(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;zeuzoix&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
MODULE_DESCRIPTION(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Kernel Module Version Example Module&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
</entry>
<entry>
<id>http://zeuzoix.github.io/techeuphoria/posts/2014/01/15/caches.html</id>
<title>Caches</title>
<updated>2014-06-26T04:22:59-04:00</updated>
<published>2014-01-15T00:00:00+00:00</published>
<link href="http://zeuzoix.github.io/techeuphoria/posts/2014/01/15/caches.html" rel="alternate" type="text/html" />
<author>
<name>Conrad Gomes</name>
</author>
<category term="processors"></category>
<category term="programming"></category>
<category term="cache"></category>
<category term="arm"></category>
<category term="cortex"></category>
<summary>

Let&#8217;s talk about the cache and its requirement in a computing system. The word
cache is derived from the french word cacher which means to hide.


In a nutshell it&#8217;s a memory subsystem which improves the speed of execution of
a thread by providing faster access to instructions and data based on their
temporal and spacial characteristics in the program.


With memory there&#8217;s typically a trade off between space and time. If speed is
required then the storage capacity of the memory reduces particularly because
the cost of the memory goes up with speed.


So system designers often incorporate a cache in between the processor and main
memory which...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Let&amp;#8217;s talk about the cache and its requirement in a computing system. The word
cache is derived from the french word cacher which means to &lt;em&gt;hide&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In a nutshell it&amp;#8217;s a memory subsystem which improves the speed of execution of
a thread by providing faster access to instructions and data based on their
temporal and spacial characteristics in the program.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;With memory there&amp;#8217;s typically a trade off between space and time. If speed is
required then the storage capacity of the memory reduces particularly because
the cost of the memory goes up with speed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;So system designers often incorporate a cache in between the processor and main
memory which can significantly improve the speed at which memory access occurs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The cache can be of different levels typically most processors these days have
an inbuilt cache termed as L1 which is the smallest memory device in the
hierarchy of memory in the system. Some processors like ARM Cortex&amp;#8217;s A series
have an in built L2 cache also.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There are several popular designs for caches. The following videos give a very
nice description of the different types of caches:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://youtu.be/bTj0vFs8ndI&quot;&gt;Direct Mapped Cache&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://youtu.be/YAz0qJf05ko&quot;&gt;Associative Cache&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://youtu.be/ReKzEGLlGfk&quot;&gt;Set Associative Cache&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
</entry>
<entry>
<id>http://zeuzoix.github.io/techeuphoria/posts/2013/12/06/linux-linked-lists.html</id>
<title>Linux Linked Lists</title>
<updated>2014-06-26T04:22:59-04:00</updated>
<published>2013-12-06T00:00:00+00:00</published>
<link href="http://zeuzoix.github.io/techeuphoria/posts/2013/12/06/linux-linked-lists.html" rel="alternate" type="text/html" />
<author>
<name>Conrad Gomes</name>
</author>
<category term="programming"></category>
<category term="linux"></category>
<category term="c"></category>
<summary>

The linux kernel has a very peculiar implementation of the linked lists data
structure. The linked list is actually a circular linked list. The following
article is useful in understanding more about the design:
http://kernelnewbies.org/FAQ/LinkedLists


What&#8217;s interesting is that the entire implementation is conveniently located
in one header file. This shows that the open source movement when done right
gives you the best solution possible over time:
http://lxr.free-electrons.com/source/include/linux/list.h
...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The linux kernel has a very peculiar implementation of the linked lists data
structure. The linked list is actually a circular linked list. The following
article is useful in understanding more about the design:&lt;br&gt;
&lt;a href=&quot;http://kernelnewbies.org/FAQ/LinkedLists&quot;&gt;http://kernelnewbies.org/FAQ/LinkedLists&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;What&amp;#8217;s interesting is that the entire implementation is conveniently located
in one header file. This shows that the open source movement when done right
gives you the best solution possible over time:&lt;br&gt;
&lt;a href=&quot;http://lxr.free-electrons.com/source/include/linux/list.h&quot;&gt;http://lxr.free-electrons.com/source/include/linux/list.h&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content>
</entry>
</feed>
